summarise(year.average = mean(Workload)) %>%
arrange(Section)
year.wkld
pct <- function(x){
x/lag(x)
}
year.wkld %>% group_by(Section) %>%
mutate_each(funs(pct), year.average)
pct.increase <- year.wkld %>% group_by(Section) %>%
mutate_each(funs(pct), year.average)
ggplot(data=pct.increase, aes(x = Year, y = year.average)) +
geom_point()
ggplot(data=pct.increase, aes(x = Year, y = year.average)) +
geom_bar()
ggplot(data=pct.increase, aes(x = Year, y = year.average)) +
geom_col()
ggplot(data=pct.increase, aes(x = Year, y = year.average)) +
geom_point()
ggplot(data=pct.increase, aes(x = Year, y = year.average)) +
geom_point() +
ylab = "Percent of previous year's workload"
ggplot(data=pct.increase, aes(x = Year, y = year.average)) +
geom_point() +
ylab = "Percent of previous year's workload"
ggplot(data=pct.increase, aes(x = Year, y = year.average)) +
geom_point() +
ylabs = "Percent of previous year's workload"
ggplot(data=pct.increase, aes(x = Year, y = year.average)) +
geom_point() +
ylab("Percent of previous year's workload")
ggplot(data=pct.increase, aes(x = Year, y = year.average, color=Section)) +
geom_point() +
ylab("Percent of previous year's workload")
year.wkld <- df.quarters %>% filter(Year > 2013) %>%
group_by(Year, Section) %>%
summarise(year.average = mean(Workload)) %>%
arrange(Section) %>%
mutate(Percent.increase = (year.average-1.0)*100 )
year.wkld
year.wkld <- df.quarters %>% filter(Year > 2013) %>%
group_by(Year, Section) %>%
summarise(year.average = mean(Workload)) %>%
arrange(Section)
<- df.quarters %>% filter(Year > 2013) %>%
year.wkld
pct.increase <- year.wkld %>% group_by(Section) %>%
mutate_each(funs(pct), year.average) %>%
mutate(Percent.increase = (year.average-1.0)*100 )
pct.increase
ggplot(data=pct.increase, aes(x = Year, y = year.average, color=Section)) +
geom_point() +
ylab("Percent of previous year's workload")
ggplot(data=pct.increase, aes(x = Year, y = Percent.increase, color=Section)) +
geom_point() +
ylab("Percent of previous year's workload")
ggplot(data=pct.increase, aes(x = Year, y = Percent.increase, color=Section)) +
geom_line() +
ylab("Percent of previous year's workload")
ggplot(data=pct.increase, aes(x = Year, y = Percent.increase, color=Section)) +
geom_point() +
ylab("Percent of previous year's workload")
gplot(data=pct.increase, aes(x = Year, y = Percent.increase, color=Section)) +
geom_point() +
ylab("Percent of previous year's workload") +
title("Percent increase by year")
ggplot(data=pct.increase, aes(x = Year, y = Percent.increase, color=Section)) +
geom_point() +
ylab("Percent of previous year's workload") +
title("Percent increase by year")
ggplot(data=pct.increase, aes(x = Year, y = Percent.increase, color=Section)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
ggplot(data=pct.increase, aes(x = Year, y = Percent.increase, color=Section)) +
geom_col() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
ggplot(data=pct.increase, aes(x = Year, y = Percent.increase, fill=Section)) +
geom_col() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, fill=Year)) +
geom_col() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, fill=Year)) +
geom_bar() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, fill=Year)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
+
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year, size =4)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year")
pct.increase
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year, size =4)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015")
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year, size =4)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase))
pct.increase <- year.wkld %>% group_by(Section) %>%
mutate_each(funs(pct), year.average) %>%
mutate(Percent.increase = round((year.average-1.0)*100),2)
ct.increase
pct.increase
gplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year, size =4)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase))
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year, size =4)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase))
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year, size =1)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase))
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year, size =.1)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase))
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
geom_point(aes(size=.1)) +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase))
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase), size=0.1)
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
geom_point() +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase), size=3)
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase), size=3)
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
ylab("Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase), size=5)
pct.increase
year.wkld
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase), size=5)
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Percent increase by year from 2015") +
geom_text(aes(label=Percent.increase), size=5)
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Percent increase of mean monthly workload by year from 2015") +
geom_text(aes(label=Percent.increase), size=5)
df.quarters
quarter.wkld <- df.quarters %>% filter(Year > 2013) %>%
group_by(Year, vec.quarters, Section) %>%
summarise(quarter.average = mean(Workload)) %>%
arrange(Section)
quarter.wkld
year.wkld
<- df.quarters %>% filter(Year > 2013) %>%
quarter.wkld
year.wkld
quarter.wkld <- df.quarters %>% filter(Year > 2013) %>%
group_by(Year, vec.quarters, Section) %>%
summarise(quarter.average = mean(Workload)) %>%
arrange(Section, vec.quarters)
quarter.wkld
quarter.wkld <- df.quarters %>% filter(Year > 2013) %>%
group_by(Year, vec.quarters, Section) %>%
summarise(quarter.average = mean(Workload)) %>%
arrange(Section, vec.quarters)
quarter.wkld <- df.quarters %>% filter(Year > 2013) %>%
group_by(Year, vec.quarters, Section) %>%
summarise(quarter.average = mean(Workload)) %>%
arrange(Section, vec.quarters)
pct.increase.q <- quarter.wkld %>% group_by(Section) %>%
mutate_each(funs(pct), quarter.average) %>%
mutate(Percent.increase.q = round((quarter.average-1.0)*100),2)
pct.increase.q
pct.increase.q <- quarter.wkld %>% group_by(Section)
pct.increase.q
pct.increase.q <- quarter.wkld %>% group_by(Section) %>%
mutate_each(funs(pct), quarter.average)
pct.increase.q
pct.increase.q <- quarter.wkld %>% group_by(Section) %>%
mutate_each(funs(pct), quarter.average) %>%
mutate(Percent.increase.q = round((quarter.average-1.0)*100),2)
pct.increase.q
pct.increase.q <- quarter.wkld %>% group_by(Section) %>%
mutate_each(funs(pct), quarter.average) %>%
mutate(Percent.increase.q = round((quarter.average-1.0)*100,2))
pct.increase.q
pct.increase.q <- quarter.wkld %>% group_by(Section, vec.quarters) %>%
mutate_each(funs(pct), quarter.average) %>%
mutate(Percent.increase.q = round((quarter.average-1.0)*100,2))
pct.increase.q
ggplot(data=pct.increase.q, aes(x = Section, y = Percent.increase.q, color=Year)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_text(aes(label=Percent.increase.q), size=5) # deliverable
View(pct.increase.q)
pct.increase.q <- filter(pct.increase.q < 600)
pct.increase.q %>% filter(Percent.increase.q < 600)
pct.increase.q <- pct.increase.q %>% filter(Percent.increase.q < 600)
ggplot(data=pct.increase.q, aes(x = Section, y = Percent.increase.q, color=Year)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_text(aes(label=Percent.increase.q), size=5) # deliverable
ggplot(data=pct.increase.q, aes(x = Section, y = Percent.increase.q, color=Year)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_point) # deliverable
ggplot(data=pct.increase.q, aes(x = Section, y = Percent.increase.q, color=Year)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_point() # deliverable
pct.increase.q
ggplot(data=pct.increase.q, aes(x = Section, y = Percent.increase.q, color=vec.quarters)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_point() # deliverable
ggplot(data=pct.increase.q, aes(x = Section, y = Percent.increase.q, color=vec.quarters)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_wrap(~Year)# deliverable
ggplot(data=pct.increase.q, aes(x = Section, y = Percent.increase.q)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(vec.quarters~Year)# deliverable
ggplot(data=pct.increase.q, aes(x = Section, y = Percent.increase.q)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(Year~vec.quarters)# deliverable
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("Monthly average") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
quarter.wkld <- df.quarters %>% filter(Year > 2013, Year < 2017) %>%
group_by(Year, vec.quarters, Section) %>%
summarise(quarter.average = mean(Workload)) %>%
arrange(Section, vec.quarters)
pct.increase.q <- quarter.wkld %>% group_by(Section, vec.quarters) %>%
mutate_each(funs(pct), quarter.average) %>%
mutate(Percent.increase.q = round((quarter.average-1.0)*100,2))
pct.increase.q <- pct.increase.q %>% filter(Percent.increase.q < 600)
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("Monthly average") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("Monthly average") +
ggtitle("Comparison by quarter") +
geom_point() +
geom_line() +
facet_grid(Section~vec.quarters)# deliverable
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("Monthly average") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
quarter.wkld <- df.quarters %>% filter(Year > 2010, Year < 2018) %>%
group_by(Year, vec.quarters, Section) %>%
summarise(quarter.average = mean(Workload)) %>%
arrange(Section, vec.quarters)
pct.increase.q <- quarter.wkld %>% group_by(Section, vec.quarters) %>%
mutate_each(funs(pct), quarter.average) %>%
mutate(Percent.increase.q = round((quarter.average-1.0)*100,2))
pct.increase.q <- pct.increase.q %>% filter(Percent.increase.q < 600)
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("Monthly average") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("% corresponding quarter in the previous year") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("% increase compared to corresponding quarter in the previous year") +
ggtitle("Comparison by quarter") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("% increase compared to corresponding quarter in the previous year") +
ggtitle("Comparison by quarter (Q1 - Apr-Jun, Q2 - Jul-Sep, Q3 - Oct-Dec, Q4 - Jan-Mar") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
quarter.wkld
quarter.wkld <- df.quarters %>% filter(Year > 2010, Year < 2017) %>%
group_by(Year, vec.quarters, Section) %>%
summarise(quarter.average = mean(Workload)) %>%
arrange(Section, vec.quarters)
pct.increase.q <- quarter.wkld %>% group_by(Section, vec.quarters) %>%
mutate_each(funs(pct), quarter.average) %>%
mutate(Percent.increase.q = round((quarter.average-1.0)*100,2))
pct.increase.q <- pct.increase.q %>% filter(Percent.increase.q < 600)
ggplot(data=pct.increase.q, aes(x = Year, y = Percent.increase.q)) +
ylab("% increase compared to corresponding quarter in the previous year") +
ggtitle("Comparison by quarter (Q1 - Apr-Jun, Q2 - Jul-Sep, Q3 - Oct-Dec, Q4 - Jan-Mar") +
geom_point() +
facet_grid(Section~vec.quarters)# deliverable
ggplot(data=pct.increase, aes(x = Section, y = Percent.increase, color=Year)) +
ylab("Monthly average - Percent of previous year's workload") +
ggtitle("Percent increase of mean monthly workload by year from 2015") +
geom_text(aes(label=Percent.increase), size=5) # deliverable
plot(dec.mydata)
mydata <- filter(mydata, Section == "Haemophilia") %>% droplevels
mydata <- select(mydata, 3)
ts.mydata <- ts(data=mydata, start = 2014, frequency = 12)
plot(ts.mydata)
dec.mydata <- decompose(ts.mydata, "additive")
plot(dec.mydata)
mydata <- filter(sections, Month > "2014-01-01") %>% droplevels
mydata <- filter(mydata, Section == "Haemophilia") %>% droplevels
mydata <- select(mydata, 3)
mydata
mydata <- filter(mydata, Section == "Thrombophilia") %>% droplevels
mydata <- select(mydata, 3)
ts.mydata <- ts(data=mydata, start = 2014, frequency = 12)
dec.mydata <- decompose(ts.mydata, "additive")
plot(dec.mydata)
plot(dec.mydata$trend, xlab = "Year", ylab = "Workload")
library(tidyr)
library(tidyverse)
library(lubridate)
work
head(work)
f.haem.pred <- work$Haemophilia
f.haem.pred
View(work)
f.haem.pred <- f.haem.pred %>%
filter(Month > 2010-01-07)
f.haem.pred <- f.haem.pred[, 8:88]
f.haem.pred <- f.haem.pred[8:88]
f.haem.pred
f.haem.pred <- f.haem.pred[12:82]
f.haem.pred
f.haem.pred <- work$Haemophilia
f.haem.pred
f.haem.pred <- f.haem.pred[19:88]
f.haem.pred
library(tseries)
install.packages("tseries")
library(tseries)
adf.test(f.haem.pred)
plot(f.haem.pred)
plotdecompose((f.haem.pred))
plot(decompose((f.haem.pred)))
df.haem.pred <- ts(data=f.haem.pred, start = 2011-07-01, frequency = 12)
plot(decompose((f.haem.pred)))
plot(decompose((df.haem.pred)))
adf.test(df.haem.pred)
?ts
df.haem.pred <- ts(data=f.haem.pred, start = c(2011,07), frequency = 12)
plot(decompose((df.haem.pred)))
adf.test(df.haem.pred)
?adf.test
y <- diffinv(df.haem.pred)
plot(y)
adf.test(y)
plot(decompose((df.haem.pred)))
library(lmtest)
install.packages("lmtest")
library(lmtest)
df.haem.pred
adf.test(df.haem.pred) # not staionary
length(df.haem.pred)
dwtest(df.haem.pred[-70]~df.haem.pred[-1])
acf(df.haem.pred, lag.max = 20)
pacf(df.haem.pred, lag.max = 20)
adj.haem.pred <- df.haem.pred - dec.haem.pred$trend
dec.haem.pred <- decompose(df.haem.pred)
adj.haem.pred <- df.haem.pred - dec.haem.pred$trend
plot(adj.haem.pred)
library(forecast)
install.packages("forecast")
library(forecast)
auto.arima(adj.haem.pred)
auto.arima(f.haem.pred)
auto.arima(f.haem.pred, ic = "aic", trace=T)
auto.arima(adj.haem.pred, ic = "aic", trace=T)
auto.arima(adj.haem.pred, ic = "aic", trace=T)
auto.arima(f.haem.pred, ic = "aic", trace=T)
arima(f.haem.pred, c(0,1,1), include.mean = T)
myarima = arima(f.haem.pred, c(0,1,1), include.mean = T)
forecast.Arima(myarima, h=3)
forecast(myarima, h=3)
plot(forecast(myarima, h=3))
plot(forecast(myarima, h=12))
plot(forecast(myarima, h=12), xlab="Month")
plot(forecast(myarima, h=12), xlab="Month", ylab="Montly Workload",main = "Projected workload for next 12 months")
plot(forecast(myarima, h=12), xlab="Month", ylab="Montly Workload",main = "Projected workload for next 12 months - Haemophilia")
f.plts.pred <- work$`Multiplate aggregation`
f.plts.pred
f.plts.pred <- f.plts.pred[59:88]
f.plts.pred
df.plts.pred <- ts(data=f.plts.pred, start = c(2014,11), frequency = 12)
df.plts.pred
adf.test(df.plts.pred) # not staionary
plot(decompose((df.haem.pred)))
plot(decompose((df.plts.pred)))
length(df.plts.pred)
dwtest(df.plts.pred[-30]~df.plts.pred[-1])
acf(df.plts.pred, lag.max = 20)
pacf(df.plts.pred, lag.max = 20)
dec.plts.pred <- decompose(df.plts.pred)
adj.plts.pred <- df.plts.pred - dec.plts.pred$trend
plot(adj.haem.pred)
auto.arima(adj.haem.pred, ic = "aic", trace=T)
auto.arima(f.haem.pred, ic = "aic", trace=T)
auto.arima(f.plts.pred, ic = "aic", trace=T)
myarima = arima(f.haem.pred, c(0,1,0), include.mean = T)
forecast(myarima, h=3)
plot(forecast(myarima, h=12), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Mulitplate")
myarima = arima(f.plts.pred, c(0,1,0), include.mean = T)
forecast(myarima, h=3)
plot(forecast(myarima, h=12), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Mulitplate")
f.fvii.pred <- work$FVII
f.fvii.pred
f.fvii.pred <- f.fvii.pred[30:88]
f.fvii.pred
df.fvii.pred <- ts(data=f.fvii.pred, start = c(2012,06), frequency = 12)
df.fvii.pred
adf.test(df.plts.pred) # not staionary
plot(decompose((df.plts.pred)))
length(df.plts.pred)
dwtest(df.plts.pred[-30]~df.plts.pred[-1])
adf.test(df.fvii.pred) # not staionary
plot(decompose((df.fvii.pred)))
length(df.pfvii.pred)
length(df.fvii.pred)
dwtest(df.plts.pred[-59]~df.plts.pred[-1])
length(df.fvii.pred)
dwtest(df.fvii.pred[-59]~df.fvii.pred[-1])
acf(df.fvii.pred, lag.max = 20)
pacf(df.fvii.pred, lag.max = 20)
dec.fvii.pred <- decompose(df.fvii.pred)
adj.fvii.pred <- df.fvii.pred - dec.fvii.pred$trend
plot(adj.fvii.pred)
plot(adj.plts.pred)
auto.arima(f.fvii.pred, ic = "aic", trace=T)
myarima = arima(f.fvii.pred, c(0,1,1), include.mean = T)
forecast(myarima, h=3)
plot(forecast(myarima, h=12), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Factor VII")
f.fvii.pred <- f.fvii.pred[30:87]
df.fvii.pred <- ts(data=f.fvii.pred, start = c(2012,06), frequency = 12)
adf.test(df.fvii.pred) # not staionary
plot(decompose((df.fvii.pred)))
f.fvii.pred <- work$FVII
f.fvii.pred <- f.fvii.pred[30:87]
df.fvii.pred <- ts(data=f.fvii.pred, start = c(2012,06), frequency = 12)
adf.test(df.fvii.pred) # not staionary
plot(decompose((df.fvii.pred)))
length(df.fvii.pred)
dwtest(df.fvii.pred[-58]~df.fvii.pred[-1])
acf(df.fvii.pred, lag.max = 20)
pacf(df.fvii.pred, lag.max = 20)
dec.fvii.pred <- decompose(df.fvii.pred)
adj.fvii.pred <- df.fvii.pred - dec.fvii.pred$trend
plot(adj.fvii.pred)
auto.arima(f.fvii.pred, ic = "aic", trace=T)
myarima = arima(f.fvii.pred, c(0,1,1), include.mean = T)
forecast(myarima, h=3)
plot(forecast(myarima, h=12), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Factor VII")
forecast(myarima, h=12)
forecast(myarima, h=3)
myarima = arima(f.plts.pred, c(0,1,0), include.mean = T)
forecast(myarima, h=3)
forecast(myarima, h=12)
plot(forecast(myarima, h=12), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Mulitplate")
myarima = arima(f.fvii.pred, c(0,1,1), include.mean = T)
forecast(myarima, h=12)
plot(forecast(myarima, h=12), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Factor VII")
plot(forecast(myarima, h=12), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Factor VII")
plot(forecast(myarima, h=1), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Factor VII")
plot(forecast(myarima, h=12), xlab="Month", ylab="Monthly Workload",main = "Projected workload for next 12 months - Factor VII")
